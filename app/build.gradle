apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'
//apply plugin: 'com.flurry.android.symbols'

repositories {
//   maven { url 'https://maven.fabric.io/public' }
}


def versionMajor = 1
def versionMinor = 6
def versionPatch = 6
def versionBuild = 99 // bump for dogfood builds, public betas, etc.
ext {
    calculateVersionName = {
        def version = "${versionMajor}.${versionMinor}.${versionPatch}"
        //if(versionBuild < 99)
            version += " [Optimus Prime]" ;// + versionBuild;
        return version
    }
    supportLibVersion = '26.0.1'
}

/*flurryCrash {
    configPath 'app/flurry.config'
}*/

android {

    lintOptions {
        disable 'InvalidPackage'
    }
    compileSdkVersion 26
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.ov3rk1ll.kinocast"
        minSdkVersion 19
        targetSdkVersion 26

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName = calculateVersionName()

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = applicationId
                    if (variant.buildType.isDebuggable()) {
                        fileName += '-debug'
                    }
                    fileName += '_v' + versionName;
                    /*if(!output.zipAlign) {
                        fileName += '-unaligned'
                    }*/
                    output.outputFileName = new File(fileName + '.apk')
                }
            }
        }

        buildConfigField "boolean", "GMS_CHECK", "true"

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        //resValue "string", "mobfox_hash", properties.getProperty('MOBFOX_HASH')
        resValue "string", "paypal_donate", properties.getProperty('PAYPAL_DONATE')
        //resValue "string", "FLURRY_API_KEY", properties.getProperty('FLURRY_API_KEY')
        //manifestPlaceholders = [ FABRIC_API_KEY: properties.getProperty('FABRIC_API_KEY')]
    }
    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:palette-v7:${supportLibVersion}"
    implementation 'com.squareup.okhttp3:okhttp:3.6.0'
    implementation 'com.github.woxthebox:draglistview:1.2.9'
    implementation 'org.jsoup:jsoup:1.9.1'
    implementation 'com.google.android.libraries.cast.companionlibrary:ccl:2.9.1'
    //compile 'com.flurry.android:ads:6.8.0'
    //compile 'com.flurry.android:analytics:6.8.0'
    implementation 'io.github.kobakei:ratethisapp:1.1.2'
    implementation 'dnsjava:dnsjava:2.1.8'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    //    compile('io.fabric.sdk.android:fabric:1.3.15@aar') {
    //        transitive = true;
    //    }
    //    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
    //        transitive = true;
    //    }
}